set Transitions;
param initialmarking{1..17};
param transitionname{Transitions};
param finalmarking{1..17};
param matrix{1..17 cross 1..13};
var transitions{Transitions}>=0, integer;
#Si minimitzem la funció en comptes de maximitzarla, obtenim el mateix resultat i repeti el procediment maximitzant i minimitzant el nombre de vegades a disparar totes les transicións possibles obtenint sempre el mateix resultat aleshores el resultat és únic llevat de perutacions.
minimize z: transitions['FerBirres'];

subject to
gettotheend{i in 1..17}: sum{j in Transitions}matrix[i,transitionname[j]]*transitions[j]=finalmarking[i]-initialmarking[i];

solve;
printf"\n\nPer tal de poder acabar el treball maximitzant el temps lliure disponible hem";
printf" d'activar les següents transicions el nombre de vegades indicat.\n";
for {i in Transitions: transitions[i]!=0} printf "\n%s\t%d\n", i, transitions[i];
printf "\n\n";

data;
set Transitions:=EstudiarPO EstudiarMC EstudiarMP EstudiarBV Trobada TotsJunts PerParelles PresentacioJunts PresentacioParelles ExemplesParelles ExemplesJunts PosarEnComu FerBirres;
param initialmarking:=1 1 2 1 3 1 4 1 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 9;
param transitionname:=EstudiarPO 1 EstudiarMC 2 EstudiarMP 3 EstudiarBV 4 Trobada 5 TotsJunts 6 PerParelles 7 PresentacioJunts 8 PresentacioParelles 9 ExemplesParelles 10 ExemplesJunts 11 PosarEnComu 12 FerBirres 13;
param finalmarking:=1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 1 17 0;
param matrix:
	1 	2 	3	4	5	6	7	8	9	10	11	12	13:=
1 	-1 	0	0	0	0	0	0	0	0	0	0	0	0
2	0	-1 	0	0	0	0	0	0	0	0	0	0	0
3	0	0	-1 	0	0	0	0	0	0	0	0	0	0
4	0	0	0	-1 	0	0	0	0	0	0	0	0	0
5	1 	0	0	0	-1 	0	0	0	0	0	0	0	0
6	0	1 	0	0	-1 	0	0	0	0	0	0	0	0
7	0	0	1 	0	-1 	0	0	0	0	0	0	0	0
8	0	0	0	1 	-1 	0	0	0	0	0	0	0	0
9	0	0	0	0	1 	-1 	-1 	0	0	0	0	0	0
10	0	0	0	0	0	4	1 	-4	-1 	0	0	0	0
11	0	0	0	0	0	0	1 	4	0	-1 	-4	0	0
12	0	0	0	0	0	0	0	0	1 	0	0	-1 	0
13	0	0	0	0	0	0	0	0	1 	0	0	-1 	0
14	0	0	0	0	0	0	0	0	0	1 	0	-1 	0
15	0	0	0	0	0	0	0	0	0	1 	0	-1 	0
16	0	0	0	0	0	0	0	0	0	0	1 	1 	0
17	0	0	0	0	0	0	0	-5	0	-6	-5	-2	-1;